[{"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\index.tsx":"1","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\reportWebVitals.ts":"2","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\App.tsx":"3","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\core-utils\\theme.ts":"4","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Pages\\LandingPage\\index.tsx":"5","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Organisms\\CardList\\index.tsx":"6","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Organisms\\Card\\index.tsx":"7","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\index.tsx":"8","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\reportWebVitals.ts":"9","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\App.tsx":"10","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\core-utils\\theme.ts":"11","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Pages\\LandingPage\\index.tsx":"12","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Organisms\\CardList\\index.tsx":"13","C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Organisms\\Card\\index.tsx":"14"},{"size":573,"mtime":1679820724551,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1679820724553,"results":"17","hashOfConfig":"16"},{"size":582,"mtime":1679875158190,"results":"18","hashOfConfig":"16"},{"size":5805,"mtime":1679934231591,"results":"19","hashOfConfig":"16"},{"size":25969,"mtime":1679934000884,"results":"20","hashOfConfig":"16"},{"size":1394,"mtime":1679820724545,"results":"21","hashOfConfig":"16"},{"size":2877,"mtime":1679878120348,"results":"22","hashOfConfig":"16"},{"size":573,"mtime":1679820724551,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1679820724553,"results":"25","hashOfConfig":"24"},{"size":582,"mtime":1679875158190,"results":"26","hashOfConfig":"24"},{"size":5805,"mtime":1679934231591,"results":"27","hashOfConfig":"24"},{"size":25969,"mtime":1679934000884,"results":"28","hashOfConfig":"24"},{"size":1394,"mtime":1679820724545,"results":"29","hashOfConfig":"24"},{"size":2891,"mtime":1679936138517,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4bo2f2",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hwep8a",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\index.tsx",[],[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\reportWebVitals.ts",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\App.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\core-utils\\theme.ts",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Pages\\LandingPage\\index.tsx",["75","76","77","78","79","80","81","82","83"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  MenuItem,\r\n  Modal,\r\n  Paper,\r\n  Select,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tabs,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport CardList from \"../../Organisms/CardList\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\n\r\nconst LandingPage = () => {\r\n  const [entertainmentBucket, setEntertainmentBucket] = useState<any>([]);\r\n  const [motivationBucket, setMotivationBucket] = useState<any>([]);\r\n  const [educationBucket, setEducationBucket] = useState<any>([]);\r\n  const [cardCreationPayload, setCardCreationPayload] = useState<any>({\r\n    name: \"\",\r\n    link: \"\",\r\n    category: \"\",\r\n    timesPlayed: 0,\r\n    lastSeenAt: \"\",\r\n  });\r\n  const [tabValue, setTabValue] = useState(\"0\");\r\n  const [isIframeModalOpen, setIsIFrameModalOpen] = useState(false);\r\n  const [currentlyOpenCard, setCurrentlyOpenCard] = useState<any>();\r\n  const [isEditDetailsModalOpen, setIsEditDetailsModalOpen] = useState(false);\r\n  const [iscreateCardModalOpen, setIsCreateCardModalOpen] = useState(false);\r\n  const [isShiftCategoryModalOpen, setIsShiftCategoryModalOpen] =\r\n    useState(false);\r\n  const [shiftedCategory, setShiftedCategory] = useState<any>(null);\r\n  const [historyData, setHistoryData] = useState<any>([]);\r\n  const [isEntertainmentDeleteDisabled, setIsEntertainmentDeleteDisabled] =\r\n    useState(true);\r\n  const [isEducationDeleteDisabled, setIsEducationDeleteDisabled] =\r\n    useState(true);\r\n  const [isMotivationDeleteDisabled, setIsMotivationDeleteDisabled] =\r\n    useState(true);\r\n\r\n  const [entertainmentChecklist, setEntertainmentChecklist] = useState<any>([]);\r\n  const [educationChecklist, setEducationChecklist] = useState<any>([]);\r\n  const [motivationChecklist, setMotivationChecklist] = useState<any>([]);\r\n\r\n  const intitalizeData = async () => {\r\n    let entertainment = axios.get(\r\n      `https://localserver.onrender.com/entertainment`\r\n    );\r\n    let education = axios.get(`https://localserver.onrender.com/education`);\r\n    let motivation = axios.get(`https://localserver.onrender.com/motivation`);\r\n\r\n    await Promise.all([entertainment, education, motivation])\r\n      .then((res) => {\r\n        setEntertainmentBucket(res[0].data);\r\n        setMotivationBucket(res[2].data);\r\n        setEducationBucket(res[1].data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onUpdate = async (id: string, type: string) => {\r\n    setIsEditDetailsModalOpen(true);\r\n    await axios.put(\r\n      `https://localserver.onrender.com/${currentlyOpenCard?.category}/${id}`,\r\n      {\r\n        name: currentlyOpenCard?.name,\r\n        link: currentlyOpenCard?.link,\r\n        category: currentlyOpenCard?.category,\r\n        timesPlayed: currentlyOpenCard?.timesPlayed,\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n  const onDelete = async (id: string, type: string) => {\r\n    await axios.delete(`https://localserver.onrender.com/${type}/${id}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    intitalizeData();\r\n  };\r\n  const onIframeClick = (cardDetails: any) => {\r\n    setIsIFrameModalOpen(true);\r\n    setCurrentlyOpenCard(cardDetails);\r\n  };\r\n  const onEditClick = (cardDetails: any) => {\r\n    setCurrentlyOpenCard(cardDetails);\r\n    setIsEditDetailsModalOpen(true);\r\n  };\r\n  const onShiftCategoryClick = (cardDetails: any) => {\r\n    setIsShiftCategoryModalOpen(true);\r\n    setCurrentlyOpenCard(cardDetails);\r\n  };\r\n\r\n  const updateTimesPlayed = async () => {\r\n    await axios.put(\r\n      `https://localserver.onrender.com/${currentlyOpenCard?.category}/${currentlyOpenCard?.id}`,\r\n      {\r\n        ...currentlyOpenCard,\r\n        timesPlayed: currentlyOpenCard?.timesPlayed + 1,\r\n        lastSeenAt: new Date().toISOString(),\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    intitalizeData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isIframeModalOpen && currentlyOpenCard) {\r\n      updateTimesPlayed();\r\n      intitalizeData();\r\n    }\r\n  }, [isIframeModalOpen]);\r\n\r\n  useEffect(() => {\r\n    if (tabValue === \"1\") {\r\n      setHistoryData([\r\n        ...educationBucket,\r\n        ...motivationBucket,\r\n        ...entertainmentBucket,\r\n      ]);\r\n    }\r\n  }, [tabValue]);\r\n  return (\r\n    <Grid\r\n      sx={{ width: \"100%\", backgroundColor: \"#808080\" }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent={\"space-between\"}\r\n      spacing={24}\r\n      padding={5}\r\n    >\r\n      <Box sx={{ width: \"100%\", typography: \"body1\", margin: 32 }}>\r\n        <TabContext value={tabValue}>\r\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n            <TabList\r\n              onChange={(e, v) => {\r\n                setTabValue(v);\r\n              }}\r\n            >\r\n              <Tab label=\"Home\" value=\"0\" />\r\n              <Tab label=\"History\" value=\"1\" />\r\n            </TabList>\r\n          </Box>\r\n          <TabPanel value=\"0\">\r\n            {/* Iframe modal*/}\r\n            <React.Fragment>\r\n              <Grid\r\n                sx={{ width: \"100%\" }}\r\n                container\r\n                direction=\"column\"\r\n                justifyContent={\"space-between\"}\r\n                spacing={24}\r\n                padding={5}\r\n              >\r\n                <Modal\r\n                  open={isIframeModalOpen}\r\n                  onClose={async () => {\r\n                    setIsIFrameModalOpen(false);\r\n                    setCurrentlyOpenCard(null);\r\n                  }}\r\n                >\r\n                  <Box sx={{ padding: \"180px 70px 70px 430px\" }}>\r\n                    <iframe\r\n                      width=\"500\"\r\n                      \r\n                      height=\"350\"\r\n                    \r\n                      title=\"sample-unique\"\r\n                      src={currentlyOpenCard?.link}\r\n                    />\r\n                  </Box>\r\n                </Modal>\r\n\r\n                {/* edit details modal*/}\r\n                <Modal\r\n                  open={isEditDetailsModalOpen}\r\n                  onClose={() => {\r\n                    setIsEditDetailsModalOpen(false);\r\n                    setCurrentlyOpenCard(null);\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    sx={{\r\n                      width: 400,\r\n                      height: 400,\r\n                      backgroundColor: \"#CFECEC\",\r\n                      position: \"absolute\" as \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%, -50%)\",\r\n                      border: \"2px solid #000\",\r\n                      boxShadow: 24,\r\n                    \r\n                      p: 4,\r\n                    }}\r\n                    container\r\n                    direction=\"column\"\r\n                    spacing={12}\r\n                  >\r\n                    <Grid item>\r\n                      <TextField\r\n                        value={currentlyOpenCard?.name}\r\n                        placeholder=\"Enter name\"\r\n                        onChange={(e) => {\r\n                          if (currentlyOpenCard && currentlyOpenCard !== null)\r\n                            setCurrentlyOpenCard({\r\n                              ...currentlyOpenCard,\r\n                              name: e.target.value,\r\n                            });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        value={currentlyOpenCard?.link}\r\n                        placeholder=\"Enter link\"\r\n                        onChange={(e) => {\r\n                          if (currentlyOpenCard && currentlyOpenCard !== null)\r\n                            setCurrentlyOpenCard({\r\n                              ...currentlyOpenCard,\r\n                              link: e.target.value,\r\n                            });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={() => {\r\n                          onUpdate(\r\n                            currentlyOpenCard?.id,\r\n                            currentlyOpenCard?.category\r\n                          );\r\n                          setIsEditDetailsModalOpen(false);\r\n                          setCurrentlyOpenCard(null);\r\n                          intitalizeData();\r\n                        }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Modal>\r\n                {/* create card modal*/}\r\n                <Modal\r\n                  open={iscreateCardModalOpen}\r\n                  onClose={() => {\r\n                    setIsCreateCardModalOpen(false);\r\n                    setCurrentlyOpenCard(null);\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    sx={{\r\n                      width: 400,\r\n                      height: 400,\r\n                      backgroundColor: \"white\",\r\n                      position: \"absolute\" as \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%, -50%)\",\r\n                      border: \"2px solid #000\",\r\n                      boxShadow: 24,\r\n                      p: 4,\r\n                    }}\r\n                    container\r\n                    direction=\"column\"\r\n                    spacing={12}\r\n                  >\r\n                    <Grid item>\r\n                      <TextField\r\n                        placeholder=\"Enter name\"\r\n                        value={cardCreationPayload?.name}\r\n                        onChange={(e) => {\r\n                          setCardCreationPayload({\r\n                            ...cardCreationPayload,\r\n                            name: e.target.value,\r\n                          });\r\n                        }}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        placeholder=\"Enter link\"\r\n                        value={cardCreationPayload?.link}\r\n                        onChange={(e) => {\r\n                          setCardCreationPayload({\r\n                            ...cardCreationPayload,\r\n                            link: e.target.value,\r\n                          });\r\n                        }}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={async () => {\r\n                          await axios.post(\r\n                            `https://localserver.onrender.com/${cardCreationPayload?.category}`,\r\n                            {\r\n                              id: new Date().valueOf(),\r\n                              ...cardCreationPayload,\r\n                            },\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                            }\r\n                          );\r\n                          setIsCreateCardModalOpen(false);\r\n                          intitalizeData();\r\n                        }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Modal>\r\n\r\n                {/* On shift category */}\r\n\r\n                <Modal\r\n                  open={isShiftCategoryModalOpen}\r\n                  onClose={() => {\r\n                    setIsShiftCategoryModalOpen(false);\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    sx={{\r\n                      width: 300,\r\n                      height: 165,\r\n                      backgroundColor: \"white\",\r\n                      position: \"absolute\" as \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%, -50%)\",\r\n                      border: \"2px solid #000\",\r\n                      boxShadow: 24,\r\n                      p: 4,\r\n                    }}\r\n                  >\r\n                    <Typography>Select category to be moved</Typography>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={shiftedCategory}\r\n                      label=\"Age\"\r\n                      sx={{ width: 120, border: \" 1px solid black\" }}\r\n                      onChange={(e) => {\r\n                        setShiftedCategory(e.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value={\"entertainment\"}>Entertainment</MenuItem>\r\n                      <MenuItem value={\"education\"}>Education</MenuItem>\r\n                      <MenuItem value={\"motivation\"}>Motivation</MenuItem>\r\n                    </Select>\r\n                    <Button\r\n                      sx={{\r\n                        display: \"table\",\r\n                        marginTop: \"10px\",\r\n                        marginLeft: 50,\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={async () => {\r\n                        await axios.post(\r\n                          `https://localserver.onrender.com/${shiftedCategory}`,\r\n                          {\r\n                            ...currentlyOpenCard,\r\n                            id: new Date().valueOf(),\r\n                            category: shiftedCategory,\r\n                            timesPlayed: 0,\r\n                            lastSeenAt: \"\",\r\n                          },\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n\r\n                        await axios.delete(\r\n                          `https://localserver.onrender.com/${currentlyOpenCard?.category}/${currentlyOpenCard?.id}`,\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n                        setIsShiftCategoryModalOpen(false);\r\n                        intitalizeData();\r\n                      }}\r\n                    >\r\n                      Move\r\n                    </Button>\r\n                  </Grid>\r\n                </Modal>\r\n\r\n                <Grid container item>\r\n                  <Typography> {`Entertainment Bucket`}</Typography>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setIsCreateCardModalOpen(true);\r\n                      setCardCreationPayload({\r\n                        ...cardCreationPayload,\r\n                        category: \"entertainment\",\r\n                      });\r\n                    }}\r\n                    variant=\"contained\"\r\n                    sx={{ marginBottom: 4, marginLeft: 4 }}\r\n                  >\r\n                    Add entertainment card\r\n                  </Button>\r\n                  <Button\r\n                    sx={{\r\n                      marginBottom: 4,\r\n                      marginLeft: 4,\r\n                      \"&:disabled\": {\r\n                        backgroundColor: \"#c7c6c\",\r\n                      },\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    disabled={entertainmentChecklist?.length <= 0}\r\n                    onClick={async () => {\r\n                      for (\r\n                        let itr = 0;\r\n                        itr < entertainmentChecklist?.length;\r\n                        itr++\r\n                      ) {\r\n                        await axios.delete(\r\n                          `https://localserver.onrender.com/entertainment/${entertainmentChecklist?.[itr]?.id}`,\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n                      }\r\n                      intitalizeData();\r\n                    }}\r\n                  >\r\n                    Delete selected\r\n                  </Button>\r\n                  <CardList\r\n                    cardList={entertainmentBucket}\r\n                    key={\"entertainmecontainernt-card-list\"}\r\n                    onUpdateClick={onUpdate}\r\n                    onDeleteClick={onDelete}\r\n                    onIframeClick={onIframeClick}\r\n                    onEditClick={onEditClick}\r\n                    onShiftCategory={onShiftCategoryClick}\r\n                    checkedList={entertainmentChecklist}\r\n                    onCheckBoxChange={(cardDetails: any, value: boolean) => {\r\n                      if (value)\r\n                        setEntertainmentChecklist([\r\n                          ...entertainmentChecklist,\r\n                          cardDetails,\r\n                        ]);\r\n                      else {\r\n                        const updatedChecklist = entertainmentChecklist?.filter(\r\n                          (checkedItem: any) => {\r\n                            return checkedItem?.id !== cardDetails?.id;\r\n                          }\r\n                        );\r\n                        setEntertainmentChecklist(updatedChecklist);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid container item>\r\n                  <Typography> {`Education Bucket`}</Typography>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setIsCreateCardModalOpen(true);\r\n                      setCardCreationPayload({\r\n                        ...cardCreationPayload,\r\n                        category: \"education\",\r\n                      });\r\n                    }}\r\n                    variant=\"contained\"\r\n                    sx={{ marginBottom: 4, marginLeft: 4 }}\r\n                  >\r\n                    Add education card\r\n                  </Button>\r\n                  <Button\r\n                    sx={{\r\n                      marginBottom: 4,\r\n                      marginLeft: 4,\r\n                      \"&:disabled\": {\r\n                        backgroundColor: \"#c7c6c3\",\r\n                      },\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    disabled={educationChecklist?.length <= 0}\r\n                    onClick={async () => {\r\n                      for (\r\n                        let itr = 0;\r\n                        itr < educationChecklist?.length;\r\n                        itr++\r\n                      ) {\r\n                        await axios.delete(\r\n                          `https://localserver.onrender.com/education/${educationChecklist?.[itr]?.id}`,\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n                      }\r\n                      intitalizeData();\r\n                    }}\r\n                  >\r\n                    Delete selected\r\n                  </Button>\r\n                  <CardList\r\n                    cardList={educationBucket}\r\n                    key={\"education-card-list\"}\r\n                    onUpdateClick={onUpdate}\r\n                    onDeleteClick={onDelete}\r\n                    onIframeClick={onIframeClick}\r\n                    onEditClick={onEditClick}\r\n                    onShiftCategory={onShiftCategoryClick}\r\n                    checkedList={educationChecklist}\r\n                    onCheckBoxChange={(cardDetails: any, value: boolean) => {\r\n                      if (value)\r\n                        setEducationChecklist([\r\n                          ...educationChecklist,\r\n                          cardDetails,\r\n                        ]);\r\n                      else {\r\n                        const updatedChecklist = educationChecklist?.filter(\r\n                          (checkedItem: any) => {\r\n                            return (\r\n                              checkedItem?.id !== cardDetails?.id &&\r\n                              checkedItem?.category !== cardDetails?.category\r\n                            );\r\n                          }\r\n                        );\r\n                        setEducationChecklist(updatedChecklist);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid container item>\r\n                  <Typography> {`Motivation Bucket`}</Typography>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setIsCreateCardModalOpen(true);\r\n                      setCardCreationPayload({\r\n                        ...cardCreationPayload,\r\n                        category: \"motivation\",\r\n                      });\r\n                    }}\r\n                    variant=\"contained\"\r\n                    sx={{ marginBottom: 4, marginLeft: 4 }}\r\n                  >\r\n                    Add motivation card\r\n                  </Button>\r\n                  <Button\r\n                    sx={{\r\n                      marginBottom: 4,\r\n                      marginLeft: 4,\r\n                      \"&:disabled\": {\r\n                        backgroundColor: \"#c7c6c3\",\r\n                      },\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    disabled={motivationChecklist?.length <= 0}\r\n                    onClick={async () => {\r\n                      for (\r\n                        let itr = 0;\r\n                        itr < motivationChecklist?.length;\r\n                        itr++\r\n                      ) {\r\n                        await axios.delete(\r\n                          `https://localserver.onrender.com/motivation/${motivationChecklist?.[itr]?.id}`,\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n                      }\r\n                      intitalizeData();\r\n                    }}\r\n                  >\r\n                    Delete selected\r\n                  </Button>\r\n                  <CardList\r\n                    cardList={motivationBucket}\r\n                    key={\"motivation-card-list\"}\r\n                    onUpdateClick={onUpdate}\r\n                    onDeleteClick={onDelete}\r\n                    onIframeClick={onIframeClick}\r\n                    onEditClick={onEditClick}\r\n                    onShiftCategory={onShiftCategoryClick}\r\n                    checkedList={motivationChecklist}\r\n                    onCheckBoxChange={(cardDetails: any, value: boolean) => {\r\n                      if (value)\r\n                        setMotivationChecklist([\r\n                          ...motivationChecklist,\r\n                          cardDetails,\r\n                        ]);\r\n                      else {\r\n                        const updatedChecklist = motivationChecklist?.filter(\r\n                          (checkedItem: any) => {\r\n                            return (\r\n                              checkedItem?.id !== cardDetails?.id &&\r\n                              checkedItem?.category !== cardDetails?.category\r\n                            );\r\n                          }\r\n                        );\r\n                        setMotivationChecklist(updatedChecklist);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          </TabPanel>\r\n          <TabPanel value=\"1\">\r\n            <TableContainer component={Paper}>\r\n              <Table\r\n                sx={{ minWidth: 650, backgroundColor: \"#CCCCCC\" }}\r\n                aria-label=\"simple table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Video Name</TableCell>\r\n                    <TableCell>Video Link</TableCell>\r\n                    <TableCell>Times Played</TableCell>\r\n                    <TableCell>Last seen (UTC)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {historyData &&\r\n                    historyData?.map((data: any) => {\r\n                      return (\r\n                        <TableRow>\r\n                          <TableCell>{data?.name}</TableCell>\r\n                          <TableCell>{data?.link}</TableCell>\r\n                          <TableCell>{data?.timesPlayed}</TableCell>\r\n                          <TableCell>\r\n                            {data?.lastSeenAt\r\n                              ? data?.lastSeenAt\r\n                              : \"yet to watch\"}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {!historyData && <CircularProgress />}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Organisms\\CardList\\index.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\Convin-Frontend-Assignment-1\\src\\Organisms\\Card\\index.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\index.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\reportWebVitals.ts",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\App.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\core-utils\\theme.ts",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Pages\\LandingPage\\index.tsx",["84","85","86","87","88","89","90","91","92"],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Organisms\\CardList\\index.tsx",[],[],"C:\\Users\\nazee\\OneDrive\\Desktop\\convin\\src\\Organisms\\Card\\index.tsx",[],[],{"ruleId":"93","severity":1,"message":"94","line":19,"column":3,"nodeType":"95","messageId":"96","endLine":19,"endColumn":7},{"ruleId":"93","severity":1,"message":"97","line":46,"column":10,"nodeType":"95","messageId":"96","endLine":46,"endColumn":39},{"ruleId":"93","severity":1,"message":"98","line":46,"column":41,"nodeType":"95","messageId":"96","endLine":46,"endColumn":73},{"ruleId":"93","severity":1,"message":"99","line":48,"column":10,"nodeType":"95","messageId":"96","endLine":48,"endColumn":35},{"ruleId":"93","severity":1,"message":"100","line":48,"column":37,"nodeType":"95","messageId":"96","endLine":48,"endColumn":65},{"ruleId":"93","severity":1,"message":"101","line":50,"column":10,"nodeType":"95","messageId":"96","endLine":50,"endColumn":36},{"ruleId":"93","severity":1,"message":"102","line":50,"column":38,"nodeType":"95","messageId":"96","endLine":50,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":138,"column":6,"nodeType":"105","endLine":138,"endColumn":25,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":148,"column":6,"nodeType":"105","endLine":148,"endColumn":16,"suggestions":"108"},{"ruleId":"93","severity":1,"message":"94","line":19,"column":3,"nodeType":"95","messageId":"96","endLine":19,"endColumn":7},{"ruleId":"93","severity":1,"message":"97","line":46,"column":10,"nodeType":"95","messageId":"96","endLine":46,"endColumn":39},{"ruleId":"93","severity":1,"message":"98","line":46,"column":41,"nodeType":"95","messageId":"96","endLine":46,"endColumn":73},{"ruleId":"93","severity":1,"message":"99","line":48,"column":10,"nodeType":"95","messageId":"96","endLine":48,"endColumn":35},{"ruleId":"93","severity":1,"message":"100","line":48,"column":37,"nodeType":"95","messageId":"96","endLine":48,"endColumn":65},{"ruleId":"93","severity":1,"message":"101","line":50,"column":10,"nodeType":"95","messageId":"96","endLine":50,"endColumn":36},{"ruleId":"93","severity":1,"message":"102","line":50,"column":38,"nodeType":"95","messageId":"96","endLine":50,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":138,"column":6,"nodeType":"105","endLine":138,"endColumn":25,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"107","line":148,"column":6,"nodeType":"105","endLine":148,"endColumn":16,"suggestions":"110"},"@typescript-eslint/no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'isEntertainmentDeleteDisabled' is assigned a value but never used.","'setIsEntertainmentDeleteDisabled' is assigned a value but never used.","'isEducationDeleteDisabled' is assigned a value but never used.","'setIsEducationDeleteDisabled' is assigned a value but never used.","'isMotivationDeleteDisabled' is assigned a value but never used.","'setIsMotivationDeleteDisabled' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentlyOpenCard' and 'updateTimesPlayed'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'educationBucket', 'entertainmentBucket', and 'motivationBucket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHistoryData' needs the current value of 'educationBucket'.",["112"],["113"],["114"],{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"115","fix":"119"},{"desc":"117","fix":"120"},"Update the dependencies array to be: [currentlyOpenCard, isIframeModalOpen, updateTimesPlayed]",{"range":"121","text":"122"},"Update the dependencies array to be: [educationBucket, entertainmentBucket, motivationBucket, tabValue]",{"range":"123","text":"124"},{"range":"125","text":"122"},{"range":"126","text":"124"},[4330,4349],"[currentlyOpenCard, isIframeModalOpen, updateTimesPlayed]",[4544,4554],"[educationBucket, entertainmentBucket, motivationBucket, tabValue]",[4330,4349],[4544,4554]]